#!/usr/bin/env python3

import subprocess
import sys
import time
from argparse import ArgumentParser, REMAINDER
from pathlib import Path

KB = 2 << 9
MB = 2 << 19
GB = 2 << 29


def determineNumberSuffix(n):
    suffix = None

    if n >= KB and n < MB:
        suffix = 'KB'

    elif n >= MB and n < GB:
        suffix = 'MB'

    elif n >= GB:
        suffix = 'GB'

    return suffix


def formatNumber(n):
    suffix = determineNumberSuffix(n)

    number = None

    if suffix == 'KB':
        number = n / KB

    elif suffix == 'MB':
        number = n / MB

    elif suffix == 'GB':
        number = n / GB

    return f'{round(number, 2)} {suffix}'


def getSpeed(size, duration):
    return size / duration


def getPercentage(new, old):
    return new / old


def determineScore(speed, compression):
    threshold = 1024
    speed = float(formatNumber(speed).split()[0])
    score = ((speed + compression) / threshold) * 100
    return round(score, 4)


def getCompression(new, old):
    return round(getPercentage(new, old) * 100, 2)


def getFileSize(src):
    return Path(src).stat().st_size


def getPathSize(src):
    src = Path(src)

    size = None

    if src.is_file():
        size = getFileSize(src)

    elif src.is_dir():
        size = sum(getFileSize(x) for x in Path(src).rglob('*'))

    return size


def runCommand(args):
    start = time.perf_counter()
    subprocess.run(args, stderr=subprocess.STDOUT)
    end = time.perf_counter() - start
    return end


def compress(cmd, in_path, out_path):
    pass


def extract(cmd, in_path, out_path):
    pass


def formCommand(cmd, in_path, out_path):
    program = cmd[0]

    if program in ('7z', 'nz', 'zip', 'zpaq'):
        if program == 'zpaq':
            cmd[2:2] = [out_path, in_path]

        else:
            cmd.extend((out_path, in_path))

    else:
        cmd.append(in_path)

    return cmd


def formatResults(results):
    results['src'] = formatNumber(results['src'][1])

    results['dst'] = formatNumber(results['dst'][1])

    results['cmd'] = ' '.join(results['cmd'])

    results['compression'] = f'{results["compression"]}%'

    results['duration'] = f'{round(results["duration"], 2)} sec(s)'

    results['score'] = str(results['score'])

    results['speed'] = formatNumber(results['speed'])

    return results


def outputResults(info):
    info = formatResults(info)

    sys.stderr.flush()

    sys.stderr.write(f'Command: {info["cmd"]}\n')
    sys.stderr.write(f'Input: {info["src"]}\n')
    sys.stderr.write(f'Output: {info["dst"]}\n')
    sys.stderr.write(f'Compression: {info["compression"]}\n')
    sys.stderr.write(f'Duration: {info["duration"]}\n')
    sys.stderr.write(f'Speed: {info["speed"]}/s\n')
    sys.stderr.write(f'Score: {info["score"]}\n')

    sys.stderr.write('\n')


def go(in_path, out_path, args):
    info = {
        'src': None,
        'dst': None,
        'cmd': None,
        'compression': None,
        'duration': None,
        'score': None,
        'speed': None
    }

    info['src'] = [in_path, getPathSize(in_path)]

    info['dst'] = [out_path]

    info['cmd'] = formCommand(args, info['src'][0], info['dst'][0])

    info['duration'] = runCommand(info['cmd'])

    info['dst'].append(getPathSize(info['dst'][0]))

    info['compression'] = getCompression(info['dst'][1], info['src'][1])

    info['speed'] = getSpeed(info['src'][1], info['duration'])

    info['score'] = determineScore(info['speed'], info['compression'])

    outputResults(info)


def main():
    parser = ArgumentParser()

    parser.add_argument('-i', nargs=1, metavar='input')
    parser.add_argument('-o', nargs=1, metavar='output')
    parser.add_argument('-args', nargs=REMAINDER)

    args = parser.parse_args()

    if args.i and args.o and args.args:
        go(args.i[0], args.o[0], args.args)

    else:
        parser.print_help()


if __name__ == '__main__':
    main()
